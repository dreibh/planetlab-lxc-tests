#!/usr/bin/python
# Thierry Parmentelat <thierry.parmentelat@inria.fr>
# Copyright (C) 2010 INRIA 
#
# this is only an example file
# the actual file is installed in your testmaster box as /root/LocalTestResources.py
# 

if __name__ == '__main__':
   import sys, os.path
   sys.path.append(os.path.expanduser("~/git-tests/system"))

from TestResources import TestResources

class OnelabTestResources (TestResources):
    
    # we use only one for now but who knows
    def plc_boxes (self):
        return [ 'testplc.pl.sophia.inria.fr' ]

    def network_dict (self):
        return { 'interface_fields:gateway':'138.96.112.250',
                 'interface_fields:network':'138.96.112.0',
                 'interface_fields:broadcast':'138.96.119.255',
                 'interface_fields:netmask':'255.255.248.0',
                 'interface_fields:dns1': '138.96.112.1',
                 'interface_fields:dns2': '138.96.112.2',
                 }

    def nodes_ip_pool (self):
        return [ ( 'vnode%02d.pl.sophia.inria.fr'%i, 
                   '138.96.112.%d'%(110+i), 
                   '02:34:56:00:00:%02d'%i) for i in range(1,8) ]
    
    # 32bits : qemu32-[1-5] + 64bits : qemu64-[1-3]
    # removing qemu64-3 until it gets on the right IP segment again
    def qemus_ip_pool (self):
        return [
            ('kvm64-1.pl.sophia.inria.fr', None, None),
            ('kvm64-2.pl.sophia.inria.fr', None, None),
            ('kvm64-3.pl.sophia.inria.fr', None, None),
            ('kvm64-4.pl.sophia.inria.fr', None, None),
            ('kvm64-5.pl.sophia.inria.fr', None, None),
            ('kvm64-6.pl.sophia.inria.fr', None, None),
            ]

    def max_qemus (self):
       # let's be tight; nighlty builds.sh wipes it clean beforehand
        return len(self.qemus_ip_pool())

    # 1 to 15
    def plcs_ip_pool (self):
        return [  ( 'vplc%02d.pl.sophia.inria.fr'%i,
                    '138.96.112.%d'%(70+i),
                    '02:34:56:00:ee:%02d'%i) for i in range(1,16) ]

    def max_plcs (self):
       # leave space for the triangle setups
        return len(self.plcs_ip_pool())-3

    def preferred_hostname (self):
        return None

local_resources = OnelabTestResources ()

if __name__ == '__main__':
   for (h,_,__) in local_resources.qemus_ip_pool(): print h
